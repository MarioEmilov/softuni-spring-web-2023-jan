1. HTTP означава Hyper Text Transfer Protocol. Представлява ред и синтаксис за представяне на информация. Използва се за предаване на данни по мрежата. Използват се 2 вида съобщения request и response.
2. HTTP response е съобщение от сървъра към клиента в отговор на заявка изпратена от клиента. Състои се от Status line, header и body. Status line съдържа версия на протокола, status code (цифров код на отговора) и Status phrase (текстово съобщение на status-а). Header-ите съдържат допълнителни параметри (Host, Content-Length, Content-Type и други). Body-то съдържа данни в различен формат например JSON, HTML и др.
3. HTTP request е заявка от клиента към сървъра която се състои от 3 основни компонента request line, header и body. Request line съдържа метода (GET, POST, PUT, PATCH, DELETE и др.), URL и версия на протокола. Header-ите съдържат допълнителни параметри (Host, Content-Length, Content-Type и други). Body-то съдържа данни в различен формат например JSON, HTML и др.
4. Методите в HTTP са GET, POST, PUT, PATCH, DELETE и др.
5. Status кода е от основно значение при обработка на отговора от сървъра при HTTP протокола. Според него се определя дали заявката е преминала успешно, а ако не е минала успешно може да се разбере защо не е минала успешно. Кодовете които са във формат 2xx означават успешно изпълнение.
6. Най-често срещаните статус кодове са: 200 OK, 201 Created, 400 Bad Request, 401 Unauthorized, 404 Not Found, 500 Internal Server Error
7. Символа "S" в HTTPS означава "Secure" (Сигурен). При него се използва TLS или SSL криптиране и криптографски сертификати за удостоверяване на автентичността на сървъра.
8. HTTP2 надгражда HTTP1.1 като е обратно съвместим с него. Комуникацията се извършва във бинарни фреймове от данни. HTTP2 използва Multiplexing, Header Compression и Server Push. Multiplexing е възможност за тренсфер на множество стриймове с 1 TCP връзка и по този начин се избягва загубата на време за няколко "three-way handshake"-а. Header Compression е оптимизация на изпращането на едни и същи данни в header-а, като се изпращат само различните данни. Server Push представлява изпращане към клиента на ресурси, без той да ги е поискал, защото е много вероятно на клиента да му трябват. Подобренията са необходими, за да се подобри скоростта на връзката и да се намали обема на излишните данни.